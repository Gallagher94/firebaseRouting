{"version":3,"sources":["firebase/config.js","firebase/user.js","firebase/auth.js","firebase/UserProvider.js","Header.js","pages/Signup.js","pages/Login.js","ProfileImage.js","pages/Profile.js","router/ProfileRedirect.js","router/PrivateRoute.js","router/AdminRoute.js","pages/Users.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","console","log","app","options","firestore","storage","createUserDocument","user","a","docRef","doc","uid","userProfile","email","name","displayName","address","city","state","zip","phone","specialty","ip","set","updateUserDocument","update","uploadImage","userId","file","progress","Promise","resolve","reject","filePath","uploadTask","ref","child","put","on","snapshot","error","signup","firstName","lastName","password","auth","createUserWithEmailAndPassword","resp","updateProfile","login","signInWithEmailAndPassword","UserContext","React","createContext","UserProvider","props","useState","loading","isAdmin","session","setSession","useEffect","unsubscribe","onAuthStateChanged","getIdTokenResult","token","claims","admin","Provider","value","children","useSession","useContext","Header","history","useHistory","logoutUser","signOut","push","className","onClick","Signup","useForm","register","handleSubmit","reset","isLoading","setLoading","onSubmit","data","newUser","formClassName","type","placeholder","to","Login","routeOnLogin","ProfileImage","id","fileInput","useRef","imageUrl","setImageUrl","uploadProgress","setUploadProgress","getDownloadURL","getDownloadUrl","then","url","fileChange","files","updateProgress","downloadUrl","bytesTransferred","totalBytes","src","alt","accept","onChange","e","target","style","width","max","current","click","Profile","params","useParams","setValue","userDocument","setUserDocument","collection","onSnapshot","exists","documentData","formData","Object","entries","map","entry","formClassname","maxWidth","margin","disabled","ProfileRedirect","Component","component","rest","render","pathname","from","location","PrivateRoute","match","AdminRoute","Users","users","setUsers","querySnapshot","docs","key","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0f69d20.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  // databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n});\nconsole.log(firebase.app().options);\n\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n","import { firestore, storage } from './config';\n\nexport const createUserDocument = async (user) => {\n  // get a reference to the Firestore document\n  const docRef = firestore.doc(`/users/${user.uid}`);\n\n  // create user object\n  const userProfile = {\n    uid: user.uid,\n    email: user.email,\n    name: user.displayName,\n    address: '',\n    city: '',\n    state: '',\n    zip: '',\n    phone: '',\n    specialty: '',\n    ip: '',\n  };\n\n  // write to Cloud Firestore\n  return docRef.set(userProfile);\n};\n\nexport const updateUserDocument = async (user) => {\n  const docRef = firestore.doc(`/users/${user.uid}`);\n  return docRef.update(user);\n};\n\nexport const uploadImage = (userId, file, progress) => {\n  return new Promise((resolve, reject) => {\n    // create file reference\n    const filePath = `users/${userId}/profile-image`;\n    const fileRef = storage.ref().child(filePath);\n\n    // upload task\n    const uploadTask = fileRef.put(file);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => progress(snapshot),\n      (error) => reject(error),\n      () => {\n        resolve(uploadTask.snapshot.ref);\n      }\n    );\n  });\n};\n\nexport const getDownloadUrl = (userId) => {\n  const filePath = `users/${userId}/profile-image`;\n  return storage.ref().child(filePath).getDownloadURL();\n};\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { createUserDocument } from './user';\n\nexport const signup = async ({ firstName, lastName, email, password }) => {\n  const resp = await firebase\n    .auth()\n    .createUserWithEmailAndPassword(email, password);\n\n  const user = resp.user;\n  await user.updateProfile({ displayName: `${firstName} ${lastName}` });\n  await createUserDocument(user);\n  return user;\n};\n\nexport const logout = () => {\n  return firebase.auth().signOut();\n};\n\nexport const login = async ({ email, password }) => {\n  const resp = await firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password);\n\n  return resp.user;\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport firebase from 'firebase/app';\n\nexport const UserContext = React.createContext();\n\nexport const UserProvider = (props) => {\n  const [session, setSession] = useState({\n    user: null,\n    loading: true,\n    isAdmin: false,\n  });\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\n      let isAdmin = false;\n\n      if (user) {\n        const token = await user.getIdTokenResult();\n        isAdmin = token.claims.admin;\n      }\n\n      setSession({ loading: false, user, isAdmin });\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <UserContext.Provider value={session}>\n      {!session.loading && props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useSession = () => {\n  const session = useContext(UserContext);\n  return session;\n};\n","import React from 'react';\nimport { logout } from './firebase/auth';\nimport { useHistory } from 'react-router-dom';\nimport { useSession } from './firebase/UserProvider';\n\nfunction Header() {\n  const history = useHistory();\n  const { user } = useSession();\n\n  const logoutUser = async () => {\n    await logout();\n    history.push('/login');\n  };\n\n  return (\n    <header>\n      <h2>The Grid</h2>\n      {!!user && (\n        <button className=\"ui secondary button logout\" onClick={logoutUser}>\n          LOGOUT\n        </button>\n      )}\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { signup } from '../firebase/auth';\nimport { Link } from 'react-router-dom';\n\nfunction Signup(props) {\n  const { register, handleSubmit, reset } = useForm();\n  const [isLoading, setLoading] = useState(false);\n\n  const onSubmit = async (data) => {\n    let newUser;\n    setLoading(true);\n    try {\n      newUser = await signup(data);\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (newUser) {\n      props.history.push(`/profile/${newUser.uid}`);\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const formClassName = `ui form ${isLoading ? 'loading' : ''}`;\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"ui card login-card\">\n        <div className=\"content\">\n          <form className={formClassName} onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"two fields\">\n              <div className=\"field\">\n                <label>\n                  First Name\n                  <input\n                    type=\"text\"\n                    name=\"firstName\"\n                    placeholder=\"First Name\"\n                    ref={register}\n                  />\n                </label>\n              </div>\n              <div className=\"field\">\n                <label>\n                  Last Name\n                  <input\n                    type=\"text\"\n                    name=\"lastName\"\n                    placeholder=\"Last Name\"\n                    ref={register}\n                  />\n                </label>\n              </div>\n            </div>\n            <div className=\"field\">\n              <label>\n                Email\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  ref={register}\n                />\n              </label>\n            </div>\n            <div className=\"field\">\n              <label>\n                Password\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  ref={register}\n                />\n              </label>\n            </div>\n            <div className=\"field actions\">\n              <button className=\"ui primary button login\" type=\"submit\">\n                Signup\n              </button>\n              or\n              <Link to=\"/login\">Log In</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { login } from '../firebase/auth';\nimport { Link } from 'react-router-dom';\n\nfunction Login(props) {\n  const { register, handleSubmit, reset } = useForm();\n  const [isLoading, setLoading] = useState(false);\n\n  const routeOnLogin = async (user) => {\n    const token = await user.getIdTokenResult();\n    if (token.claims.admin) {\n      props.history.push('/users');\n    } else {\n      props.history.push(`/profile/${user.uid}`);\n    }\n  };\n\n  const onSubmit = async (data) => {\n    let user;\n    setLoading(true);\n    try {\n      user = await login(data);\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (user) {\n      routeOnLogin(user);\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const formClassName = `ui form ${isLoading ? 'loading' : ''}`;\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"ui card login-card\">\n        <div className=\"content\">\n          <form className={formClassName} onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"field\">\n              <label>\n                Email\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  ref={register}\n                />\n              </label>\n            </div>\n            <div className=\"field\">\n              <label>\n                Password\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  ref={register}\n                />\n              </label>\n            </div>\n            <div className=\"field actions\">\n              <button className=\"ui primary button login\" type=\"submit\">\n                Login\n              </button>\n              or\n              <Link to=\"/signup\">Sign Up</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { uploadImage, getDownloadUrl } from './firebase/user';\n\nexport const ProfileImage = ({ id }) => {\n  const fileInput = useRef(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  useEffect(() => {\n    getDownloadUrl(id).then((url) => !!url && setImageUrl(url));\n  }, [id]);\n\n  const fileChange = async (files) => {\n    const ref = await uploadImage(id, files[0], updateProgress);\n    const downloadUrl = await ref.getDownloadURL();\n    setImageUrl(downloadUrl);\n  };\n\n  const updateProgress = (snapshot) => {\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    setUploadProgress(progress);\n  };\n\n  return (\n    <div className=\"four wide column profile-image\">\n      <img\n        className=\"ui image\"\n        src={imageUrl || '/profile-placeholder.png'}\n        alt=\"profile\"\n      />\n      <input\n        className=\"file-input\"\n        type=\"file\"\n        accept=\".png,.jpg\"\n        ref={fileInput}\n        onChange={(e) => fileChange(e.target.files)}\n      />\n      <progress\n        style={{ width: '100%' }}\n        max=\"100\"\n        value={uploadProgress}\n      ></progress>\n      <button\n        className=\"ui grey button upload-button\"\n        onClick={() => fileInput.current.click()}\n      >\n        Upload Photo\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useSession } from '../firebase/UserProvider';\nimport { firestore } from '../firebase/config';\nimport { updateUserDocument } from '../firebase/user';\nimport { ProfileImage } from '../ProfileImage';\n\nconst Profile = () => {\n  const { user } = useSession();\n  const params = useParams(); // gets params passed in from router\n  const { register, setValue, handleSubmit } = useForm();\n  const [userDocument, setUserDocument] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const docRef = firestore.collection('users').doc(params.id);\n    const unsubscribe = docRef.onSnapshot((doc) => {\n      if (doc.exists) {\n        const documentData = doc.data();\n        setUserDocument(documentData);\n        const formData = Object.entries(documentData).map((entry) => ({\n          [entry[0]]: entry[1],\n        }));\n\n        setValue(formData);\n      }\n    });\n    return unsubscribe;\n  }, [user.uid, setValue, params.id]);\n\n  const onSubmit = async (data) => {\n    try {\n      setLoading(true);\n      await updateUserDocument({ uid: params.id, ...data });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!userDocument) {\n    return null;\n  }\n\n  const formClassname = `ui big form twelve wide column ${isLoading ? 'loading' : ''}`;\n\n  return (\n    <div\n      className=\"add-form-container\"\n      style={{ maxWidth: 960, margin: '50px auto' }}\n    >\n      <div className=\"ui grid stackable\">\n        <ProfileImage id={params.id} />\n        <form className={formClassname} onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"fields\">\n            <div className=\"eight wide field\">\n              <label>\n                Name\n                <input type=\"text\" name=\"name\" ref={register} />\n              </label>\n            </div>\n            <div className=\"eight wide field\">\n              <label>\n                Email\n                <input type=\"text\" name=\"email\" disabled ref={register} />\n              </label>\n            </div>\n          </div>\n          <div className=\"fields\">\n            <div className=\"six wide field\">\n              <label>\n                Address\n                <input type=\"text\" name=\"address\" ref={register} />\n              </label>\n            </div>\n            <div className=\"five wide field\">\n              <label>\n                City\n                <input type=\"text\" name=\"city\" ref={register} />\n              </label>\n            </div>\n            <div className=\"two wide field\">\n              <label>\n                State\n                <input type=\"text\" name=\"state\" ref={register} />\n              </label>\n            </div>\n            <div className=\"three wide field\">\n              <label>\n                Zip\n                <input type=\"text\" name=\"zip\" ref={register} />\n              </label>\n            </div>\n          </div>\n          <div className=\"equal width fields\">\n            <div className=\"field\">\n              <label>\n                Phone\n                <input type=\"text\" name=\"phone\" ref={register} />\n              </label>\n            </div>\n            <div className=\"field\">\n              <label>\n                Specialty\n                <select className=\"specialty\" name=\"specialty\" ref={register}>\n                  <option value=\"field agent\">Field Agent</option>\n                  <option value=\"covert operations\">Covert Operations</option>\n                  <option value=\"intelligence officer\">\n                    Intelligence Officer\n                  </option>\n                </select>\n              </label>\n            </div>\n            <div className=\"field\">\n              <label>\n                ip\n                <input type=\"text\" name=\"ip\" ref={register} />\n              </label>\n            </div>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"ui submit large grey button right floated\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSession } from '../firebase/UserProvider';\n\nconst ProfileRedirect = ({ component: Component, ...rest }) => {\n  const { user, isAdmin } = useSession();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isAdmin ? '/users' : `/profile/${user.uid}`,\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default ProfileRedirect;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSession } from '../firebase/UserProvider';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { user, isAdmin } = useSession();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        const id = props.match.params.id;\n\n        if (!!user && (user.uid === id || isAdmin)) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSession } from '../firebase/UserProvider';\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n  const { user, isAdmin } = useSession();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!!user && isAdmin) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default AdminRoute;\n","import React, { useState, useEffect } from 'react';\nimport { firestore } from '../firebase/config';\nimport { Link } from 'react-router-dom';\n\nconst Users = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const usersRef = firestore.collection('users');\n    const unsubscribe = usersRef.onSnapshot((querySnapshot) => {\n      const users = querySnapshot.docs.map((doc) => doc.data());\n      setUsers(users);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <div>\n      <table className=\"ui selectable celled table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Specialty</th>\n            <th>Secret Address</th>\n            <th>Phone</th>\n            <th>IP Address</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr key={user.uid}>\n              <td>\n                <Link to={`/profile/${user.uid}`}>{user.name}</Link>\n              </td>\n              <td>{user.specialty}</td>\n              <td>\n                {user.address} {user.city}, {user.state} {user.zip}\n              </td>\n              <td>{user.phone}</td>\n              <td>{user.ip}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport Header from './Header';\nimport './App.css';\nimport './firebase/config';\nimport './pages/Signup';\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport { UserProvider } from './firebase/UserProvider';\nimport Profile from './pages/Profile';\nimport ProfileRedirect from './router/ProfileRedirect';\nimport PrivateRoute from './router/PrivateRoute';\nimport AdminRoute from './router/AdminRoute';\nimport Users from './pages/Users';\n\nfunction App() {\n  return (\n    <UserProvider>\n      <BrowserRouter>\n        <Header></Header>\n        <div className=\"app\">\n          <div className=\"ui grid container\">\n            <Switch>\n              <ProfileRedirect exact path=\"/signup\" component={Signup} />\n              <PrivateRoute exact path=\"/profile/:id\" component={Profile} />\n              <ProfileRedirect exact path=\"/login\" component={Login} />\n              <AdminRoute exact path=\"/users\" component={Users} />\n              <Route exact path=\"/\">\n                <Redirect to=\"/login\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </UserProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './semantic-ui.custom.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}